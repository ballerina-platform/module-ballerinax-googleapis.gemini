// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

import ballerina/http;

# Represents the Queries record for the operation: generativelanguage.models.list
public type GenerativelanguageModelsListQueries record {
    # Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    string quotaUser?;
    # Returns response with indentations and line breaks.
    boolean prettyPrint = true;
    # Data format for response.
    "json"|"media"|"proto" alt = "json";
    # The maximum number of `Models` to return (per page). If unspecified, 50 models will be returned per page. This method returns at most 1000 models per page, even if you pass a larger page_size.
    int pageSize?;
    # OAuth access token.
    string access_token?;
    # Upload protocol for media (e.g. "raw", "multipart").
    string upload_protocol?;
    # V1 error format.
    "1"|"2" \$\.xgafv?;
    # OAuth 2.0 token for the current user.
    string oauth_token?;
    # Legacy upload protocol for media (e.g. "media", "multipart").
    string uploadType?;
    # JSONP
    string callback?;
    # A page token, received from a previous `ListModels` call. Provide the `page_token` returned by one request as an argument to the next request to retrieve the next page. When paginating, all other parameters provided to `ListModels` must match the call that provided the page token.
    string pageToken?;
    # Selector specifying which fields to include in a partial response.
    string fields?;
    # API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    string 'key?;
};

# Represents the Queries record for the operation: generativelanguage.models.generateContent
public type GenerativelanguageModelsGeneratecontentQueries record {
    # Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    string quotaUser?;
    # OAuth access token.
    string access_token?;
    # Upload protocol for media (e.g. "raw", "multipart").
    string upload_protocol?;
    # V1 error format.
    "1"|"2" \$\.xgafv?;
    # Returns response with indentations and line breaks.
    boolean prettyPrint = true;
    # OAuth 2.0 token for the current user.
    string oauth_token?;
    # Legacy upload protocol for media (e.g. "media", "multipart").
    string uploadType?;
    # Data format for response.
    "json"|"media"|"proto" alt = "json";
    # JSONP
    string callback?;
    # Selector specifying which fields to include in a partial response.
    string fields?;
    # API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    string 'key?;
};

# Raw media bytes. Text should not be sent as raw bytes, use the 'text' field.
public type Blob record {
    # Raw bytes for media formats.
    string data?;
    # The IANA standard MIME type of the source data. Examples: - image/png - image/jpeg If an unsupported MIME type is provided, an error will be returned. For a complete list of supported types, see [Supported file formats](https://ai.google.dev/gemini-api/docs/prompting_with_media#supported_file_formats).
    string mimeType?;
};

# Represents the Queries record for the operation: generativelanguage.models.streamGenerateContent
public type GenerativelanguageModelsStreamgeneratecontentQueries record {
    # Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    string quotaUser?;
    # OAuth access token.
    string access_token?;
    # Upload protocol for media (e.g. "raw", "multipart").
    string upload_protocol?;
    # V1 error format.
    "1"|"2" \$\.xgafv?;
    # Returns response with indentations and line breaks.
    boolean prettyPrint = true;
    # OAuth 2.0 token for the current user.
    string oauth_token?;
    # Legacy upload protocol for media (e.g. "media", "multipart").
    string uploadType?;
    # Data format for response.
    "json"|"media"|"proto" alt = "json";
    # JSONP
    string callback?;
    # Selector specifying which fields to include in a partial response.
    string fields?;
    # API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    string 'key?;
};

# Represents the Queries record for the operation: generativelanguage.models.countTokens
public type GenerativelanguageModelsCounttokensQueries record {
    # Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    string quotaUser?;
    # OAuth access token.
    string access_token?;
    # Upload protocol for media (e.g. "raw", "multipart").
    string upload_protocol?;
    # V1 error format.
    "1"|"2" \$\.xgafv?;
    # Returns response with indentations and line breaks.
    boolean prettyPrint = true;
    # OAuth 2.0 token for the current user.
    string oauth_token?;
    # Legacy upload protocol for media (e.g. "media", "multipart").
    string uploadType?;
    # Data format for response.
    "json"|"media"|"proto" alt = "json";
    # JSONP
    string callback?;
    # Selector specifying which fields to include in a partial response.
    string fields?;
    # API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    string 'key?;
};

# Represents the Queries record for the operation: generativelanguage.tunedModels.operations.cancel
public type GenerativelanguageTunedmodelsOperationsCancelQueries record {
    # Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    string quotaUser?;
    # OAuth access token.
    string access_token?;
    # Upload protocol for media (e.g. "raw", "multipart").
    string upload_protocol?;
    # V1 error format.
    "1"|"2" \$\.xgafv?;
    # Returns response with indentations and line breaks.
    boolean prettyPrint = true;
    # OAuth 2.0 token for the current user.
    string oauth_token?;
    # Legacy upload protocol for media (e.g. "media", "multipart").
    string uploadType?;
    # Data format for response.
    "json"|"media"|"proto" alt = "json";
    # JSONP
    string callback?;
    # Selector specifying which fields to include in a partial response.
    string fields?;
    # API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    string 'key?;
};

# Batch request to get embeddings from the model for a list of prompts.
public type BatchEmbedContentsRequest record {
    # Required. Embed requests for the batch. The model in each of these requests must match the model specified `BatchEmbedContentsRequest.model`.
    EmbedContentRequest[] requests?;
};

# Represents the Queries record for the operation: generativelanguage.models.embedContent
public type GenerativelanguageModelsEmbedcontentQueries record {
    # Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    string quotaUser?;
    # OAuth access token.
    string access_token?;
    # Upload protocol for media (e.g. "raw", "multipart").
    string upload_protocol?;
    # V1 error format.
    "1"|"2" \$\.xgafv?;
    # Returns response with indentations and line breaks.
    boolean prettyPrint = true;
    # OAuth 2.0 token for the current user.
    string oauth_token?;
    # Legacy upload protocol for media (e.g. "media", "multipart").
    string uploadType?;
    # Data format for response.
    "json"|"media"|"proto" alt = "json";
    # JSONP
    string callback?;
    # Selector specifying which fields to include in a partial response.
    string fields?;
    # API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    string 'key?;
};

# Proxy server configurations to be used with the HTTP client endpoint.
public type ProxyConfig record {|
    # Host name of the proxy server
    string host = "";
    # Proxy server port
    int port = 0;
    # Proxy server username
    string userName = "";
    # Proxy server password
    @display {label: "", kind: "password"}
    string password = "";
|};

# Configuration options for model generation and outputs. Not all parameters are configurable for every model.
public type GenerationConfig record {
    # Optional. Number of generated responses to return. Currently, this value can only be set to 1. If unset, this will default to 1.
    int:Signed32 candidateCount?;
    # Optional. Enables enhanced civic answers. It may not be available for all models.
    boolean enableEnhancedCivicAnswers?;
    # Optional. Frequency penalty applied to the next token's logprobs, multiplied by the number of times each token has been seen in the respponse so far. A positive penalty will discourage the use of tokens that have already been used, proportional to the number of times the token has been used: The more a token is used, the more dificult it is for the model to use that token again increasing the vocabulary of responses. Caution: A _negative_ penalty will encourage the model to reuse tokens proportional to the number of times the token has been used. Small negative values will reduce the vocabulary of a response. Larger negative values will cause the model to start repeating a common token until it hits the max_output_tokens limit.
    float frequencyPenalty?;
    # Optional. Only valid if response_logprobs=True. This sets the number of top logprobs to return at each decoding step in the Candidate.logprobs_result.
    int:Signed32 logprobs?;
    # Optional. The maximum number of tokens to include in a response candidate. Note: The default value varies by model, see the `Model.output_token_limit` attribute of the `Model` returned from the `getModel` function.
    int:Signed32 maxOutputTokens?;
    # Optional. Presence penalty applied to the next token's logprobs if the token has already been seen in the response. This penalty is binary on/off and not dependant on the number of times the token is used (after the first). Use frequency_penalty for a penalty that increases with each use. A positive penalty will discourage the use of tokens that have already been used in the response, increasing the vocabulary. A negative penalty will encourage the use of tokens that have already been used in the response, decreasing the vocabulary.
    float presencePenalty?;
    # Optional. If true, export the logprobs results in response.
    boolean responseLogprobs?;
    # Optional. The set of character sequences (up to 5) that will stop output generation. If specified, the API will stop at the first appearance of a `stop_sequence`. The stop sequence will not be included as part of the response.
    string[] stopSequences?;
    # Optional. Controls the randomness of the output. Note: The default value varies by model, see the `Model.temperature` attribute of the `Model` returned from the `getModel` function. Values can range from [0.0, 2.0].
    float temperature?;
    # Optional. The maximum number of tokens to consider when sampling. Gemini models use Top-p (nucleus) sampling or a combination of Top-k and nucleus sampling. Top-k sampling considers the set of `top_k` most probable tokens. Models running with nucleus sampling don't allow top_k setting. Note: The default value varies by `Model` and is specified by the`Model.top_p` attribute returned from the `getModel` function. An empty `top_k` attribute indicates that the model doesn't apply top-k sampling and doesn't allow setting `top_k` on requests.
    int:Signed32 topK?;
    # Optional. The maximum cumulative probability of tokens to consider when sampling. The model uses combined Top-k and Top-p (nucleus) sampling. Tokens are sorted based on their assigned probabilities so that only the most likely tokens are considered. Top-k sampling directly limits the maximum number of tokens to consider, while Nucleus sampling limits the number of tokens based on the cumulative probability. Note: The default value varies by `Model` and is specified by the`Model.top_p` attribute returned from the `getModel` function. An empty `top_k` attribute indicates that the model doesn't apply top-k sampling and doesn't allow setting `top_k` on requests.
    float topP?;
};

# Represents the Queries record for the operation: generativelanguage.models.batchEmbedContents
public type GenerativelanguageModelsBatchembedcontentsQueries record {
    # Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    string quotaUser?;
    # OAuth access token.
    string access_token?;
    # Upload protocol for media (e.g. "raw", "multipart").
    string upload_protocol?;
    # V1 error format.
    "1"|"2" \$\.xgafv?;
    # Returns response with indentations and line breaks.
    boolean prettyPrint = true;
    # OAuth 2.0 token for the current user.
    string oauth_token?;
    # Legacy upload protocol for media (e.g. "media", "multipart").
    string uploadType?;
    # Data format for response.
    "json"|"media"|"proto" alt = "json";
    # JSONP
    string callback?;
    # Selector specifying which fields to include in a partial response.
    string fields?;
    # API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    string 'key?;
};

# Represents the Queries record for the operation: generativelanguage.models.operations.list
public type GenerativelanguageModelsOperationsListQueries record {
    # Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    string quotaUser?;
    # Returns response with indentations and line breaks.
    boolean prettyPrint = true;
    # Data format for response.
    "json"|"media"|"proto" alt = "json";
    # The standard list page size.
    int pageSize?;
    # OAuth access token.
    string access_token?;
    # The standard list filter.
    string filter?;
    # Upload protocol for media (e.g. "raw", "multipart").
    string upload_protocol?;
    # V1 error format.
    "1"|"2" \$\.xgafv?;
    # OAuth 2.0 token for the current user.
    string oauth_token?;
    # Legacy upload protocol for media (e.g. "media", "multipart").
    string uploadType?;
    # JSONP
    string callback?;
    # The standard list page token.
    string pageToken?;
    # Selector specifying which fields to include in a partial response.
    string fields?;
    # API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    string 'key?;
};

# Counts the number of tokens in the `prompt` sent to a model. Models may tokenize text differently, so each model may return a different `token_count`.
public type CountTokensRequest record {
    # Optional. The input given to the model as a prompt. This field is ignored when `generate_content_request` is set.
    Content[] contents?;
    GenerateContentRequest generateContentRequest?;
};

# Safety setting, affecting the safety-blocking behavior. Passing a safety setting for a category changes the allowed probability that content is blocked.
public type SafetySetting record {
    # Required. The category for this setting.
    "HARM_CATEGORY_UNSPECIFIED"|"HARM_CATEGORY_DEROGATORY"|"HARM_CATEGORY_TOXICITY"|"HARM_CATEGORY_VIOLENCE"|"HARM_CATEGORY_SEXUAL"|"HARM_CATEGORY_MEDICAL"|"HARM_CATEGORY_DANGEROUS"|"HARM_CATEGORY_HARASSMENT"|"HARM_CATEGORY_HATE_SPEECH"|"HARM_CATEGORY_SEXUALLY_EXPLICIT"|"HARM_CATEGORY_DANGEROUS_CONTENT"|"HARM_CATEGORY_CIVIC_INTEGRITY" category?;
    # Required. Controls the probability threshold at which harm is blocked.
    "HARM_BLOCK_THRESHOLD_UNSPECIFIED"|"BLOCK_LOW_AND_ABOVE"|"BLOCK_MEDIUM_AND_ABOVE"|"BLOCK_ONLY_HIGH"|"BLOCK_NONE"|"OFF" threshold?;
};

# Provides settings related to HTTP/1.x protocol.
public type ClientHttp1Settings record {|
    # Specifies whether to reuse a connection for multiple requests
    http:KeepAlive keepAlive = http:KEEPALIVE_AUTO;
    # The chunking behaviour of the request
    http:Chunking chunking = http:CHUNKING_AUTO;
    # Proxy server related options
    ProxyConfig proxy?;
|};

# A datatype containing media that is part of a multi-part `Content` message. A `Part` consists of data which has an associated datatype. A `Part` can only contain one of the accepted types in `Part.data`. A `Part` must have a fixed IANA MIME type identifying the type and subtype of the media if the `inline_data` field is filled with raw bytes.
public type Part record {
    Blob inlineData?;
    # Inline text.
    string text?;
};

# The base structured datatype containing multi-part content of a message. A `Content` includes a `role` field designating the producer of the `Content` and a `parts` field containing multi-part data that contains the content of the message turn.
public type Content record {
    # Ordered `Parts` that constitute a single message. Parts may have different MIME types.
    Part[] parts?;
    # Optional. The producer of the content. Must be either 'user' or 'model'. Useful to set for multi-turn conversations, otherwise can be left blank or unset.
    string role?;
};

# Request to generate a completion from the model.
public type GenerateContentRequest record {
    # Required. The content of the current conversation with the model. For single-turn queries, this is a single instance. For multi-turn queries like [chat](https://ai.google.dev/gemini-api/docs/text-generation#chat), this is a repeated field that contains the conversation history and the latest request.
    Content[] contents?;
    GenerationConfig generationConfig?;
    # Required. The name of the `Model` to use for generating the completion. Format: `models/{model}`.
    string model?;
    # Optional. A list of unique `SafetySetting` instances for blocking unsafe content. This will be enforced on the `GenerateContentRequest.contents` and `GenerateContentResponse.candidates`. There should not be more than one setting for each `SafetyCategory` type. The API will block any contents and responses that fail to meet the thresholds set by these settings. This list overrides the default settings for each `SafetyCategory` specified in the safety_settings. If there is no `SafetySetting` for a given `SafetyCategory` provided in the list, the API will use the default safety setting for that category. Harm categories HARM_CATEGORY_HATE_SPEECH, HARM_CATEGORY_SEXUALLY_EXPLICIT, HARM_CATEGORY_DANGEROUS_CONTENT, HARM_CATEGORY_HARASSMENT are supported. Refer to the [guide](https://ai.google.dev/gemini-api/docs/safety-settings) for detailed information on available safety settings. Also refer to the [Safety guidance](https://ai.google.dev/gemini-api/docs/safety-guidance) to learn how to incorporate safety considerations in your AI applications.
    SafetySetting[] safetySettings?;
};

# The request message for Operations.CancelOperation.
public type CancelOperationRequest record {
};

# Represents the Queries record for the operation: generativelanguage.models.operations.get
public type GenerativelanguageModelsOperationsGetQueries record {
    # Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    string quotaUser?;
    # Returns response with indentations and line breaks.
    boolean prettyPrint = true;
    # Data format for response.
    "json"|"media"|"proto" alt = "json";
    # The standard list page size.
    int pageSize?;
    # OAuth access token.
    string access_token?;
    # The standard list filter.
    string filter?;
    # Upload protocol for media (e.g. "raw", "multipart").
    string upload_protocol?;
    # V1 error format.
    "1"|"2" \$\.xgafv?;
    # OAuth 2.0 token for the current user.
    string oauth_token?;
    # Legacy upload protocol for media (e.g. "media", "multipart").
    string uploadType?;
    # JSONP
    string callback?;
    # The standard list page token.
    string pageToken?;
    # Selector specifying which fields to include in a partial response.
    string fields?;
    # API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    string 'key?;
};

# Represents the Queries record for the operation: generativelanguage.operations.delete
public type GenerativelanguageOperationsDeleteQueries record {
    # Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    string quotaUser?;
    # OAuth access token.
    string access_token?;
    # Upload protocol for media (e.g. "raw", "multipart").
    string upload_protocol?;
    # V1 error format.
    "1"|"2" \$\.xgafv?;
    # Returns response with indentations and line breaks.
    boolean prettyPrint = true;
    # OAuth 2.0 token for the current user.
    string oauth_token?;
    # Legacy upload protocol for media (e.g. "media", "multipart").
    string uploadType?;
    # Data format for response.
    "json"|"media"|"proto" alt = "json";
    # JSONP
    string callback?;
    # Selector specifying which fields to include in a partial response.
    string fields?;
    # API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    string 'key?;
};

# Request containing the `Content` for the model to embed.
public type EmbedContentRequest record {
    Content content?;
    # Required. The model's resource name. This serves as an ID for the Model to use. This name should match a model name returned by the `ListModels` method. Format: `models/{model}`
    string model?;
    # Optional. Optional reduced dimension for the output embedding. If set, excessive values in the output embedding are truncated from the end. Supported by newer models since 2024 only. You cannot set this value if using the earlier model (`models/embedding-001`).
    int:Signed32 outputDimensionality?;
    # Optional. Optional task type for which the embeddings will be used. Can only be set for `models/embedding-001`.
    "TASK_TYPE_UNSPECIFIED"|"RETRIEVAL_QUERY"|"RETRIEVAL_DOCUMENT"|"SEMANTIC_SIMILARITY"|"CLASSIFICATION"|"CLUSTERING"|"QUESTION_ANSWERING"|"FACT_VERIFICATION" taskType?;
    # Optional. An optional title for the text. Only applicable when TaskType is `RETRIEVAL_DOCUMENT`. Note: Specifying a `title` for `RETRIEVAL_DOCUMENT` provides better quality embeddings for retrieval.
    string title?;
};

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # Configurations related to client authentication
    http:BearerTokenConfig auth;
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    ClientHttp1Settings http1Settings?;
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings?;
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 60;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache?;
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits?;
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
|};
